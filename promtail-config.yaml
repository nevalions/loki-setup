# promtail-config.yaml
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: ${LOKI_URL}
  # - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: [ "logging=promtail" ]
    relabel_configs:
      - source_labels: [ '__meta_docker_container_label_logging_jobname' ]
        target_label: 'job'

    pipeline_stages:
      # Common stages for all jobs
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<component>backend_logger_[A-Za-z0-9]+) - (?P<level>[A-Z]+) - (?P<message>.+)$'
      - labels:
          level: level
          component: component
          message: message
      - timestamp:
          format: "2006-01-02 15:04:05,000"
          source: timestamp
      - regex:
          expression: 'Class:\s*(?P<class>[A-Za-z0-9]+) - Func:\s*(?P<function>[A-Za-z0-9_]+)'
      - labels:
          class: class
          function: function

      # Drop logs that don't match the backend_logger pattern
      - match:
          selector: '{job="backend_dev_logs"} !~ ".*backend_logger.*"'
          action: drop
          drop_counter_reason: promtail_non_back_log
      - match:
          selector: '{job="backend_prod_logs"} !~ ".*backend_logger.*"'
          action: drop
          drop_counter_reason: promtail_non_back_log
#      - match:
#          selector: '{job="backend_test_logs"} !~ ".*backend_logger.*"'
#          action: drop
#          drop_counter_reason: promtail_non_back_log

      # Job-specific template and output
      - match:
          selector: '{job="backend_dev_logs"}'
          stages:
            - template:
                source: output
                template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
            - output:
                source: output

      - match:
          selector: '{job="backend_prod_logs"}'
          stages:
            - template:
                source: output
                template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
            - output:
                source: output

      - match:
          selector: '{job="backend_test_logs"}'
          stages:
            - template:
                source: output
                template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
            - output:
                source: output
#    pipeline_stages:
#      - match:
#          selector: '{job="backend_dev_logs"}'
#          stages:
#            - regex:
#                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<component>backend_logger_[A-Za-z0-9]+) - (?P<level>[A-Z]+) - (?P<message>.+)$'
#            - labels:
#                level: level
#                component: component
#                message: message
#            - timestamp:
#                format: "2006-01-02 15:04:05,000"
#                source: timestamp
#            - regex:
#                expression: 'Class:\s*(?P<class>[A-Za-z0-9]+) - Func:\s*(?P<function>[A-Za-z0-9_]+)'
#            - labels:
#                class: class
#                function: function
#      - match:
#          selector: '{job="backend_dev_logs"} !~ ".*backend_logger.*"'
#          action: drop
#          drop_counter_reason: promtail_non_back_log
#      - template:
#          source: output
#          template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
#      - output:
#          source: output
#
#      - match:
#          selector: '{backend_prod_logs"}'
#          stages:
#            - regex:
#                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<component>backend_logger_[A-Za-z0-9]+) - (?P<level>[A-Z]+) - (?P<message>.+)$'
#            - labels:
#                level: level
#                component: component
#                message: message
#            - timestamp:
#                format: "2006-01-02 15:04:05,000"
#                source: timestamp
#            - regex:
#                expression: 'Class:\s*(?P<class>[A-Za-z0-9]+) - Func:\s*(?P<function>[A-Za-z0-9_]+)'
#            - labels:
#                class: class
#                function: function
#      - match:
#          selector: '{job="backend_prod_logs"} !~ ".*backend_logger.*"'
#          action: drop
#          drop_counter_reason: promtail_non_back_log
#      - template:
#          source: output
#          template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
#      - output:
#          source: output
#
#
#      - match:
#          selector: '{backend_test_logs"}'
#          stages:
#            - regex:
#                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<component>backend_logger_[A-Za-z0-9]+) - (?P<level>[A-Z]+) - (?P<message>.+)$'
#            - labels:
#                level: level
#                component: component
#                message: message
#            - timestamp:
#                format: "2006-01-02 15:04:05,000"
#                source: timestamp
#            - regex:
#                expression: 'Class:\s*(?P<class>[A-Za-z0-9]+) - Func:\s*(?P<function>[A-Za-z0-9_]+)'
#            - labels:
#                class: class
#                function: function
#      - match:
#          selector: '{job="backend_test_logs"} !~ ".*backend_logger.*"'
#          action: drop
#          drop_counter_reason: promtail_non_back_log
#      - template:
#          source: output
#          template: '{{ ToUpper .level }} | {{ .message }} | Component[{{ .component }}] | {{ .timestamp }}'
#      - output:
#          source: output


#  - job_name: journal
#    journal:
#      max_age: 12h
#      labels:
#        job: systemd-journal
#    relabel_configs:
#      - source_labels: ['__journal__hostname']
#        target_label: 'host'
#      - source_labels: ['__journal__unit']
#        target_label: 'unit'
#      - source_labels: ['__journal__priority']
#        target_label: 'priority'
#  - job_name: system
#    static_configs:
#      - targets:
#          - localhost
#        labels:
#          job: varlogs
#          __path__: /var/log/*


#  - job_name: statsboards
#    static_configs:
#      - targets:
#          - localhost
#        labels:
#          job: statsboards
#          app: backend
#          __path__: ${STATS_BACK_LOGS_PATH_BACK}
#  - job_name: nginx-access
#    static_configs:
#      - targets:
#          - localhost
#        labels:
#          job: nginx
#          app: access
#          __path__: ${NGINX_ACCESS_LOG_PATH}
#  - job_name: nginx-error
#    static_configs:
#      - targets:
#          - localhost
#        labels:
#          job: nginx
#          app: error
#          __path__: ${NGINX_ERROR_LOG_PATH}
